{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ashwi\\\\Desktop\\\\app\\\\client\\\\src\\\\context.js\";\nimport React, { Component } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Context = /*#__PURE__*/React.createContext();\n\nconst reducer = (prevState, action) => {\n  switch (action.type) {\n    case \"TOGGLE\":\n      return {\n        todos: prevState.todos.map(t => {\n          if (t.id === action.payload) {\n            t.complete = !t.complete;\n          }\n\n          ;\n          return t;\n        })\n      };\n\n    case \"REMOVE   \":\n      return {\n        todos: prevState.todos.map(t => {\n          if (t.id === action.payload) {\n            t.complete = !t.complete;\n          }\n\n          ;\n          return t;\n        })\n      };\n\n    default:\n      return prevState;\n  }\n};\n\nexport class Provider extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      todos: [{\n        id: 1,\n        title: \"check email\",\n        complete: false\n      }, {\n        id: 2,\n        title: \"attend interview\",\n        complete: true\n      }, {\n        id: 3,\n        title: \"class test\",\n        complete: false\n      }],\n      dispatch: action => this.setState(prevState => reducer(prevState, action))\n    };\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Context.Provider, {\n      value: this.state,\n      children: this.props.children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this);\n  }\n\n}\nexport const Consumer = Context.Consumer;","map":{"version":3,"sources":["C:/Users/ashwi/Desktop/app/client/src/context.js"],"names":["React","Component","Context","createContext","reducer","prevState","action","type","todos","map","t","id","payload","complete","Provider","state","title","dispatch","setState","render","props","children","Consumer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AACA,MAAMC,OAAO,gBAAGF,KAAK,CAACG,aAAN,EAAhB;;AAEA,MAAMC,OAAO,GAAG,CAACC,SAAD,EAAWC,MAAX,KAAoB;AAChC,UAAOA,MAAM,CAACC,IAAd;AACI,SAAK,QAAL;AACI,aAAM;AAACC,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAE;AAAC,cAAGA,CAAC,CAACC,EAAF,KAAOL,MAAM,CAACM,OAAjB,EAAyB;AAACF,YAAAA,CAAC,CAACG,QAAF,GAAa,CAACH,CAAC,CAACG,QAAhB;AAAyB;;AACjG;AAAE,iBAAOH,CAAP;AAAU,SADU;AAAR,OAAN;;AAER,SAAK,WAAL;AACQ,aAAM;AAACF,QAAAA,KAAK,EAAEH,SAAS,CAACG,KAAV,CAAgBC,GAAhB,CAAoBC,CAAC,IAAE;AAAC,cAAGA,CAAC,CAACC,EAAF,KAAOL,MAAM,CAACM,OAAjB,EAAyB;AAACF,YAAAA,CAAC,CAACG,QAAF,GAAa,CAACH,CAAC,CAACG,QAAhB;AAAyB;;AACjG;AAAE,iBAAOH,CAAP;AAAU,SADU;AAAR,OAAN;;AAEJ;AACI,aAAOL,SAAP;AARR;AAUH,CAXD;;AAYA,OAAQ,MAAMS,QAAN,SAAuBb,SAAvB,CAAiC;AAAA;AAAA;AAAA,SACzCc,KADyC,GACnC;AACFP,MAAAA,KAAK,EAAC,CACF;AAACG,QAAAA,EAAE,EAAC,CAAJ;AACAK,QAAAA,KAAK,EAAC,aADN;AAEAH,QAAAA,QAAQ,EAAC;AAFT,OADE,EAKN;AAACF,QAAAA,EAAE,EAAC,CAAJ;AACIK,QAAAA,KAAK,EAAC,kBADV;AAEIH,QAAAA,QAAQ,EAAC;AAFb,OALM,EASN;AAACF,QAAAA,EAAE,EAAC,CAAJ;AACIK,QAAAA,KAAK,EAAC,YADV;AAEIH,QAAAA,QAAQ,EAAC;AAFb,OATM,CADJ;AAeFI,MAAAA,QAAQ,EAAEX,MAAD,IAAU,KAAKY,QAAL,CAAcb,SAAS,IAAID,OAAO,CAACC,SAAD,EAAWC,MAAX,CAAlC;AAfjB,KADmC;AAAA;;AAmBrCa,EAAAA,MAAM,GAAG;AACL,wBACG,QAAC,OAAD,CAAS,QAAT;AAAkB,MAAA,KAAK,EAAE,KAAKJ,KAA9B;AAAA,gBAAsC,KAAKK,KAAL,CAAWC;AAAjD;AAAA;AAAA;AAAA;AAAA,YADH;AAIH;;AAxBoC;AA0BzC,OAAO,MAAMC,QAAQ,GAAGpB,OAAO,CAACoB,QAAzB","sourcesContent":["import React, { Component } from 'react'\r\nconst Context = React.createContext();\r\n\r\nconst reducer = (prevState,action)=>{\r\n    switch(action.type){\r\n        case \"TOGGLE\":\r\n            return{todos: prevState.todos.map(t=>{if(t.id===action.payload){t.complete = !t.complete}\r\n    ; return t })}\r\n    case \"REMOVE   \":\r\n            return{todos: prevState.todos.map(t=>{if(t.id===action.payload){t.complete = !t.complete}\r\n    ; return t })}\r\n        default:\r\n            return prevState;\r\n}\r\n}\r\nexport  class Provider extends Component {\r\nstate={\r\n    todos:[\r\n        {id:1,\r\n        title:\"check email\",\r\n        complete:false\r\n    },\r\n    {id:2,\r\n        title:\"attend interview\",\r\n        complete:true\r\n    },\r\n    {id:3,\r\n        title:\"class test\",\r\n        complete:false\r\n    },\r\n    ],\r\n    dispatch:(action)=>this.setState(prevState => reducer(prevState,action))\r\n}\r\n\r\n    render() {\r\n        return (\r\n           <Context.Provider value={this.state}>{this.props.children}\r\n            </Context.Provider>\r\n        )\r\n    }\r\n}\r\nexport const Consumer = Context.Consumer"]},"metadata":{},"sourceType":"module"}